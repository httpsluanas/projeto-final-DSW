# Generated by Django 3.1.4 on 2023-12-05 15:38

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=90)),
                ('password', models.CharField(max_length=90)),
            ],
        ),
        migrations.CreateModel(
            name='EquipamentoPublico',
            fields=[
                ('id_equipamento', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, max_length=20, null=True)),
                ('tipo', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Geometria',
            fields=[
                ('id_geom', models.AutoField(primary_key=True, serialize=False)),
                ('centroide', models.CharField(blank=True, max_length=20, null=True)),
                ('area', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModeloDinamico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Proprietario',
            fields=[
                ('id_proprietario', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, max_length=20, null=True)),
                ('data_nasc', models.DateField(blank=True, null=True)),
                ('cpf', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RRR',
            fields=[
                ('id_RRR', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(blank=True, max_length=20, null=True)),
                ('descricao', models.CharField(blank=True, max_length=20, null=True)),
                ('data_inicio', models.DateField(blank=True, null=True)),
                ('data_termino', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Imovel',
            fields=[
                ('id_imovel', models.AutoField(primary_key=True, serialize=False)),
                ('endereco', models.CharField(blank=True, max_length=20, null=True)),
                ('tipo', models.CharField(blank=True, max_length=20, null=True)),
                ('area', models.CharField(blank=True, max_length=20, null=True)),
                ('equipamento_publico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.equipamentopublico')),
                ('geometria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.geometria')),
                ('proprietario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.proprietario')),
                ('rrr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.rrr')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.Group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
